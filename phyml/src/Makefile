# Makefile.in generated by automake 1.15.1 from Makefile.am.
# src/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994-2017 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



# EXTRA_DIST = doc bin examples


am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/phyml
pkgincludedir = $(includedir)/phyml
pkglibdir = $(libdir)/phyml
pkglibexecdir = $(libexecdir)/phyml
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-pc-linux-gnu
host_triplet = x86_64-pc-linux-gnu
#bin_PROGRAMS = phyml$(EXEEXT)
##bin_PROGRAMS = date$(EXEEXT)
##bin_PROGRAMS = phyrexsim$(EXEEXT)
##bin_PROGRAMS = phyrex$(EXEEXT)
##bin_PROGRAMS = phyml-beagle$(EXEEXT)
##bin_PROGRAMS = checkpoint$(EXEEXT)
##bin_PROGRAMS = evolve$(EXEEXT)
##bin_PROGRAMS = phylogeo$(EXEEXT)
##bin_PROGRAMS = invitee$(EXEEXT)
##bin_PROGRAMS = test$(EXEEXT)
##bin_PROGRAMS = phyml-windows$(EXEEXT)
##bin_PROGRAMS = phyml-mpi$(EXEEXT)
##bin_PROGRAMS = rf$(EXEEXT)
##bin_PROGRAMS = tiporder$(EXEEXT)
##bin_PROGRAMS = part$(EXEEXT)
##bin_PROGRAMS = phycont$(EXEEXT)
##bin_PROGRAMS = phytime$(EXEEXT)
bin_PROGRAMS = phyml$(EXEEXT)
subdir = src
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am $(am__DIST_COMMON)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__installdirs = "$(DESTDIR)$(bindir)"
PROGRAMS = $(bin_PROGRAMS)
am__checkpoint_SOURCES_DIST = main.c utilities.c utilities.h optimiz.c \
	optimiz.h lk.c lk.h bionj.c bionj.h models.c models.h free.c \
	free.h help.c help.h simu.c simu.h eigen.c eigen.h pars.c \
	pars.h alrt.c alrt.h interface.c interface.h cl.c cl.h spr.c \
	spr.h draw.c draw.h stats.c stats.h rates.c rates.h mcmc.c \
	mcmc.h times.c times.h tiporder.c tiporder.h mg.c mg.h io.c \
	io.h make.c make.h tbe.c tbe.h nexus.c nexus.h init.c init.h \
	xml.c xml.h mixt.c mixt.h checkpoint.c checkpoint.h
#am_checkpoint_OBJECTS = main.$(OBJEXT) \
#	utilities.$(OBJEXT) \
#	optimiz.$(OBJEXT) \
#	lk.$(OBJEXT) \
#	bionj.$(OBJEXT) \
#	models.$(OBJEXT) \
#	free.$(OBJEXT) \
#	help.$(OBJEXT) \
#	simu.$(OBJEXT) \
#	eigen.$(OBJEXT) \
#	pars.$(OBJEXT) \
#	alrt.$(OBJEXT) \
#	interface.$(OBJEXT) \
#	cl.$(OBJEXT) \
#	spr.$(OBJEXT) \
#	draw.$(OBJEXT) \
#	stats.$(OBJEXT) \
#	rates.$(OBJEXT) \
#	mcmc.$(OBJEXT) \
#	times.$(OBJEXT) \
#	tiporder.$(OBJEXT) \
#	mg.$(OBJEXT) \
#	io.$(OBJEXT) \
#	make.$(OBJEXT) \
#	tbe.$(OBJEXT) \
#	nexus.$(OBJEXT) \
#	init.$(OBJEXT) \
#	xml.$(OBJEXT) \
#	mixt.$(OBJEXT) \
#	checkpoint.$(OBJEXT)
checkpoint_OBJECTS = $(am_checkpoint_OBJECTS)
checkpoint_DEPENDENCIES =
am__date_SOURCES_DIST = main.c utilities.c utilities.h optimiz.c \
	optimiz.h lk.c lk.h bionj.c bionj.h models.c models.h free.c \
	free.h help.c help.h simu.c simu.h eigen.c eigen.h pars.c \
	pars.h alrt.c alrt.h interface.c interface.h cl.c cl.h spr.c \
	spr.h draw.c draw.h stats.c stats.h rates.c rates.h mcmc.c \
	mcmc.h times.c times.h tiporder.c tiporder.h mg.c mg.h io.c \
	io.h make.c make.h nexus.c nexus.h init.c init.h xml.c xml.h \
	tbe.c tbe.h mixt.c mixt.h date.c date.h
#am_date_OBJECTS = main.$(OBJEXT) \
#	utilities.$(OBJEXT) \
#	optimiz.$(OBJEXT) \
#	lk.$(OBJEXT) \
#	bionj.$(OBJEXT) \
#	models.$(OBJEXT) \
#	free.$(OBJEXT) \
#	help.$(OBJEXT) \
#	simu.$(OBJEXT) \
#	eigen.$(OBJEXT) \
#	pars.$(OBJEXT) \
#	alrt.$(OBJEXT) \
#	interface.$(OBJEXT) \
#	cl.$(OBJEXT) \
#	spr.$(OBJEXT) \
#	draw.$(OBJEXT) \
#	stats.$(OBJEXT) \
#	rates.$(OBJEXT) \
#	mcmc.$(OBJEXT) \
#	times.$(OBJEXT) \
#	tiporder.$(OBJEXT) \
#	mg.$(OBJEXT) \
#	io.$(OBJEXT) \
#	make.$(OBJEXT) \
#	nexus.$(OBJEXT) \
#	init.$(OBJEXT) \
#	xml.$(OBJEXT) \
#	tbe.$(OBJEXT) \
#	mixt.$(OBJEXT) \
#	date.$(OBJEXT)
date_OBJECTS = $(am_date_OBJECTS)
date_DEPENDENCIES =
am__evolve_SOURCES_DIST = main.c utilities.c utilities.h optimiz.c \
	optimiz.h lk.c lk.h bionj.c bionj.h models.c models.h free.c \
	free.h help.c help.h simu.c simu.h eigen.c eigen.h pars.c \
	pars.h alrt.c alrt.h interface.c interface.h cl.c cl.h spr.c \
	spr.h draw.c draw.h tbe.c tbe.h stats.c stats.h rates.c \
	rates.h mcmc.c mcmc.h times.c times.h tiporder.c tiporder.h \
	mg.c mg.h io.c io.h make.c make.h nexus.c nexus.h init.c \
	init.h xml.c xml.h mixt.c mixt.h
#am_evolve_OBJECTS = main.$(OBJEXT) \
#	utilities.$(OBJEXT) \
#	optimiz.$(OBJEXT) \
#	lk.$(OBJEXT) \
#	bionj.$(OBJEXT) \
#	models.$(OBJEXT) \
#	free.$(OBJEXT) \
#	help.$(OBJEXT) \
#	simu.$(OBJEXT) \
#	eigen.$(OBJEXT) \
#	pars.$(OBJEXT) \
#	alrt.$(OBJEXT) \
#	interface.$(OBJEXT) \
#	cl.$(OBJEXT) \
#	spr.$(OBJEXT) \
#	draw.$(OBJEXT) \
#	tbe.$(OBJEXT) \
#	stats.$(OBJEXT) \
#	rates.$(OBJEXT) \
#	mcmc.$(OBJEXT) \
#	times.$(OBJEXT) \
#	tiporder.$(OBJEXT) \
#	mg.$(OBJEXT) \
#	io.$(OBJEXT) \
#	make.$(OBJEXT) \
#	nexus.$(OBJEXT) \
#	init.$(OBJEXT) \
#	xml.$(OBJEXT) \
#	mixt.$(OBJEXT)
evolve_OBJECTS = $(am_evolve_OBJECTS)
evolve_DEPENDENCIES =
am__invitee_SOURCES_DIST = main.c utilities.c utilities.h optimiz.c \
	optimiz.h lk.c lk.h bionj.c bionj.h models.c models.h free.c \
	free.h help.c help.h simu.c simu.h eigen.c eigen.h pars.c \
	pars.h alrt.c alrt.h interface.c interface.h cl.c cl.h spr.c \
	spr.h draw.c draw.h stats.c stats.h rates.c rates.h mcmc.c \
	mcmc.h times.c times.h tiporder.c tiporder.h mg.c mg.h io.c \
	io.h make.c make.h nexus.c nexus.h tbe.c tbe.h init.c init.h \
	xml.c xml.h invitee.c invitee.h mixt.c mixt.h
#am_invitee_OBJECTS = main.$(OBJEXT) \
#	utilities.$(OBJEXT) \
#	optimiz.$(OBJEXT) \
#	lk.$(OBJEXT) \
#	bionj.$(OBJEXT) \
#	models.$(OBJEXT) \
#	free.$(OBJEXT) \
#	help.$(OBJEXT) \
#	simu.$(OBJEXT) \
#	eigen.$(OBJEXT) \
#	pars.$(OBJEXT) \
#	alrt.$(OBJEXT) \
#	interface.$(OBJEXT) \
#	cl.$(OBJEXT) \
#	spr.$(OBJEXT) \
#	draw.$(OBJEXT) \
#	stats.$(OBJEXT) \
#	rates.$(OBJEXT) \
#	mcmc.$(OBJEXT) \
#	times.$(OBJEXT) \
#	tiporder.$(OBJEXT) \
#	mg.$(OBJEXT) \
#	io.$(OBJEXT) \
#	make.$(OBJEXT) \
#	nexus.$(OBJEXT) \
#	tbe.$(OBJEXT) \
#	init.$(OBJEXT) \
#	xml.$(OBJEXT) \
#	invitee.$(OBJEXT) \
#	mixt.$(OBJEXT)
invitee_OBJECTS = $(am_invitee_OBJECTS)
invitee_DEPENDENCIES =
am__part_SOURCES_DIST = main.c utilities.c utilities.h optimiz.c \
	optimiz.h lk.c lk.h bionj.c bionj.h models.c models.h free.c \
	free.h help.c help.h simu.c simu.h eigen.c eigen.h pars.c \
	pars.h alrt.c alrt.h interface.c interface.h cl.c cl.h mg.c \
	mg.h spr.c spr.h tbe.c tbe.h draw.c draw.h stats.c stats.h \
	tiporder.c tiporder.h
#am_part_OBJECTS = main.$(OBJEXT) \
#	utilities.$(OBJEXT) \
#	optimiz.$(OBJEXT) \
#	lk.$(OBJEXT) \
#	bionj.$(OBJEXT) \
#	models.$(OBJEXT) \
#	free.$(OBJEXT) \
#	help.$(OBJEXT) \
#	simu.$(OBJEXT) \
#	eigen.$(OBJEXT) \
#	pars.$(OBJEXT) \
#	alrt.$(OBJEXT) \
#	interface.$(OBJEXT) \
#	cl.$(OBJEXT) \
#	mg.$(OBJEXT) \
#	spr.$(OBJEXT) \
#	tbe.$(OBJEXT) \
#	draw.$(OBJEXT) \
#	stats.$(OBJEXT) \
#	tiporder.$(OBJEXT)
part_OBJECTS = $(am_part_OBJECTS)
part_DEPENDENCIES =
am__phycont_SOURCES_DIST = main.c utilities.c utilities.h optimiz.c \
	optimiz.h lk.c lk.h bionj.c bionj.h models.c models.h free.c \
	free.h help.c help.h simu.c simu.h eigen.c eigen.h pars.c \
	pars.h alrt.c alrt.h interface.c interface.h cl.c cl.h spr.c \
	spr.h times.c times.h draw.c draw.h rates.c rates.h mcmc.c \
	mcmc.h tbe.c tbe.h stats.c stats.h mg.c mg.h tiporder.c \
	tiporder.h
#am_phycont_OBJECTS =  \
#	main.$(OBJEXT) \
#	utilities.$(OBJEXT) \
#	optimiz.$(OBJEXT) \
#	lk.$(OBJEXT) \
#	bionj.$(OBJEXT) \
#	models.$(OBJEXT) \
#	free.$(OBJEXT) \
#	help.$(OBJEXT) \
#	simu.$(OBJEXT) \
#	eigen.$(OBJEXT) \
#	pars.$(OBJEXT) \
#	alrt.$(OBJEXT) \
#	interface.$(OBJEXT) \
#	cl.$(OBJEXT) \
#	spr.$(OBJEXT) \
#	times.$(OBJEXT) \
#	draw.$(OBJEXT) \
#	rates.$(OBJEXT) \
#	mcmc.$(OBJEXT) \
#	tbe.$(OBJEXT) \
#	stats.$(OBJEXT) \
#	mg.$(OBJEXT) \
#	tiporder.$(OBJEXT)
phycont_OBJECTS = $(am_phycont_OBJECTS)
phycont_DEPENDENCIES =
am__phylogeo_SOURCES_DIST = main.c utilities.c utilities.h optimiz.c \
	optimiz.h lk.c lk.h bionj.c bionj.h models.c models.h free.c \
	free.h help.c help.h simu.c simu.h eigen.c eigen.h pars.c \
	pars.h alrt.c alrt.h interface.c interface.h cl.c cl.h spr.c \
	spr.h draw.c draw.h stats.c stats.h rates.c rates.h mcmc.c \
	mcmc.h times.c times.h tiporder.c tiporder.h mg.c mg.h io.c \
	io.h make.c make.h tbe.c tbe.h nexus.c nexus.h init.c init.h \
	xml.c xml.h mixt.c mixt.h geo.c geo.h
#am_phylogeo_OBJECTS = main.$(OBJEXT) \
#	utilities.$(OBJEXT) \
#	optimiz.$(OBJEXT) \
#	lk.$(OBJEXT) \
#	bionj.$(OBJEXT) \
#	models.$(OBJEXT) \
#	free.$(OBJEXT) \
#	help.$(OBJEXT) \
#	simu.$(OBJEXT) \
#	eigen.$(OBJEXT) \
#	pars.$(OBJEXT) \
#	alrt.$(OBJEXT) \
#	interface.$(OBJEXT) \
#	cl.$(OBJEXT) \
#	spr.$(OBJEXT) \
#	draw.$(OBJEXT) \
#	stats.$(OBJEXT) \
#	rates.$(OBJEXT) \
#	mcmc.$(OBJEXT) \
#	times.$(OBJEXT) \
#	tiporder.$(OBJEXT) \
#	mg.$(OBJEXT) \
#	io.$(OBJEXT) \
#	make.$(OBJEXT) \
#	tbe.$(OBJEXT) \
#	nexus.$(OBJEXT) \
#	init.$(OBJEXT) \
#	xml.$(OBJEXT) \
#	mixt.$(OBJEXT) \
#	geo.$(OBJEXT)
phylogeo_OBJECTS = $(am_phylogeo_OBJECTS)
phylogeo_DEPENDENCIES =
am__phyml_SOURCES_DIST = main.c utilities.c utilities.h optimiz.c \
	optimiz.h lk.c lk.h bionj.c bionj.h models.c models.h free.c \
	free.h help.c help.h simu.c simu.h eigen.c eigen.h pars.c \
	pars.h alrt.c alrt.h interface.c interface.h cl.c cl.h spr.c \
	spr.h draw.c draw.h stats.c stats.h rates.c rates.h mcmc.c \
	mcmc.h times.c times.h tiporder.c tiporder.h io.c io.h make.c \
	make.h nexus.c nexus.h init.c init.h xml.c xml.h date.c date.h \
	sse.c sse.h avx.c avx.h tbe.c tbe.h ancestral.c ancestral.h \
	mixt.c mixt.h
am_phyml_OBJECTS = main.$(OBJEXT) \
	utilities.$(OBJEXT) \
	optimiz.$(OBJEXT) \
	lk.$(OBJEXT) \
	bionj.$(OBJEXT) \
	models.$(OBJEXT) \
	free.$(OBJEXT) \
	help.$(OBJEXT) \
	simu.$(OBJEXT) \
	eigen.$(OBJEXT) \
	pars.$(OBJEXT) \
	alrt.$(OBJEXT) \
	interface.$(OBJEXT) \
	cl.$(OBJEXT) \
	spr.$(OBJEXT) \
	draw.$(OBJEXT) \
	stats.$(OBJEXT) \
	rates.$(OBJEXT) \
	mcmc.$(OBJEXT) \
	times.$(OBJEXT) \
	tiporder.$(OBJEXT) \
	io.$(OBJEXT) \
	make.$(OBJEXT) \
	nexus.$(OBJEXT) \
	init.$(OBJEXT) \
	xml.$(OBJEXT) \
	date.$(OBJEXT) \
	sse.$(OBJEXT) \
	avx.$(OBJEXT) \
	tbe.$(OBJEXT) \
	ancestral.$(OBJEXT) \
	mixt.$(OBJEXT)
phyml_OBJECTS = $(am_phyml_OBJECTS)
phyml_DEPENDENCIES =
am__phyml_beagle_SOURCES_DIST = main.c utilities.c utilities.h \
	optimiz.c optimiz.h lk.c lk.h bionj.c bionj.h models.c \
	models.h free.c free.h help.c help.h simu.c simu.h eigen.c \
	eigen.h pars.c pars.h alrt.c alrt.h interface.c interface.h \
	cl.c cl.h spr.c spr.h draw.c draw.h stats.c stats.h rates.c \
	rates.h mcmc.c mcmc.h times.c times.h tiporder.c tiporder.h \
	mg.c mg.h tbe.c tbe.h io.c io.h make.c make.h nexus.c nexus.h \
	init.c init.h xml.c xml.h mixt.c mixt.h beagle_utils.c \
	beagle_utils.h
#am_phyml_beagle_OBJECTS = main.$(OBJEXT) \
#	utilities.$(OBJEXT) \
#	optimiz.$(OBJEXT) \
#	lk.$(OBJEXT) \
#	bionj.$(OBJEXT) \
#	models.$(OBJEXT) \
#	free.$(OBJEXT) \
#	help.$(OBJEXT) \
#	simu.$(OBJEXT) \
#	eigen.$(OBJEXT) \
#	pars.$(OBJEXT) \
#	alrt.$(OBJEXT) \
#	interface.$(OBJEXT) \
#	cl.$(OBJEXT) \
#	spr.$(OBJEXT) \
#	draw.$(OBJEXT) \
#	stats.$(OBJEXT) \
#	rates.$(OBJEXT) \
#	mcmc.$(OBJEXT) \
#	times.$(OBJEXT) \
#	tiporder.$(OBJEXT) \
#	mg.$(OBJEXT) \
#	tbe.$(OBJEXT) \
#	io.$(OBJEXT) \
#	make.$(OBJEXT) \
#	nexus.$(OBJEXT) \
#	init.$(OBJEXT) \
#	xml.$(OBJEXT) \
#	mixt.$(OBJEXT) \
#	beagle_utils.$(OBJEXT)
phyml_beagle_OBJECTS = $(am_phyml_beagle_OBJECTS)
phyml_beagle_DEPENDENCIES =
am__phyml_mpi_SOURCES_DIST = main.c utilities.c utilities.h optimiz.c \
	optimiz.h lk.c lk.h bionj.c bionj.h models.c models.h free.c \
	free.h help.c help.h simu.c simu.h eigen.c eigen.h pars.c \
	pars.h alrt.c alrt.h interface.c interface.h cl.c cl.h spr.c \
	spr.h draw.c draw.h stats.c stats.h rates.c rates.h mcmc.c \
	mcmc.h times.c times.h tiporder.c tiporder.h mg.c mg.h io.c \
	io.h make.c make.h nexus.c nexus.h init.c init.h xml.c xml.h \
	mixt.c mixt.h tbe.c tbe.h date.c date.h sse.c sse.h avx.c \
	avx.h ancestral.c ancestral.h mpi_boot.c mpi_boot.h
#am_phyml_mpi_OBJECTS = main.$(OBJEXT) \
#	utilities.$(OBJEXT) \
#	optimiz.$(OBJEXT) \
#	lk.$(OBJEXT) \
#	bionj.$(OBJEXT) \
#	models.$(OBJEXT) \
#	free.$(OBJEXT) \
#	help.$(OBJEXT) \
#	simu.$(OBJEXT) \
#	eigen.$(OBJEXT) \
#	pars.$(OBJEXT) \
#	alrt.$(OBJEXT) \
#	interface.$(OBJEXT) \
#	cl.$(OBJEXT) \
#	spr.$(OBJEXT) \
#	draw.$(OBJEXT) \
#	stats.$(OBJEXT) \
#	rates.$(OBJEXT) \
#	mcmc.$(OBJEXT) \
#	times.$(OBJEXT) \
#	tiporder.$(OBJEXT) \
#	mg.$(OBJEXT) \
#	io.$(OBJEXT) \
#	make.$(OBJEXT) \
#	nexus.$(OBJEXT) \
#	init.$(OBJEXT) \
#	xml.$(OBJEXT) \
#	mixt.$(OBJEXT) \
#	tbe.$(OBJEXT) \
#	date.$(OBJEXT) \
#	sse.$(OBJEXT) \
#	avx.$(OBJEXT) \
#	ancestral.$(OBJEXT) \
#	mpi_boot.$(OBJEXT)
phyml_mpi_OBJECTS = $(am_phyml_mpi_OBJECTS)
phyml_mpi_DEPENDENCIES =
am__phyml_windows_SOURCES_DIST = main.c utilities.c utilities.h \
	optimiz.c optimiz.h lk.c lk.h bionj.c bionj.h models.c \
	models.h free.c free.h help.c help.h simu.c simu.h eigen.c \
	eigen.h pars.c pars.h alrt.c alrt.h interface.c interface.h \
	cl.c cl.h spr.c spr.h draw.c draw.h tbe.c tbe.h stats.c \
	stats.h rates.c rates.h mcmc.c mcmc.h times.c times.h \
	tiporder.c tiporder.h mg.c mg.h io.c io.h make.c make.h \
	nexus.c nexus.h init.c init.h xml.c xml.h mixt.c mixt.h sse.c \
	sse.h avx.c avx.h ancestral.c ancestral.h date.c date.h
#am_phyml_windows_OBJECTS = main.$(OBJEXT) \
#	utilities.$(OBJEXT) \
#	optimiz.$(OBJEXT) \
#	lk.$(OBJEXT) \
#	bionj.$(OBJEXT) \
#	models.$(OBJEXT) \
#	free.$(OBJEXT) \
#	help.$(OBJEXT) \
#	simu.$(OBJEXT) \
#	eigen.$(OBJEXT) \
#	pars.$(OBJEXT) \
#	alrt.$(OBJEXT) \
#	interface.$(OBJEXT) \
#	cl.$(OBJEXT) \
#	spr.$(OBJEXT) \
#	draw.$(OBJEXT) \
#	tbe.$(OBJEXT) \
#	stats.$(OBJEXT) \
#	rates.$(OBJEXT) \
#	mcmc.$(OBJEXT) \
#	times.$(OBJEXT) \
#	tiporder.$(OBJEXT) \
#	mg.$(OBJEXT) \
#	io.$(OBJEXT) \
#	make.$(OBJEXT) \
#	nexus.$(OBJEXT) \
#	init.$(OBJEXT) \
#	xml.$(OBJEXT) \
#	mixt.$(OBJEXT) \
#	sse.$(OBJEXT) \
#	avx.$(OBJEXT) \
#	ancestral.$(OBJEXT) \
#	date.$(OBJEXT)
phyml_windows_OBJECTS = $(am_phyml_windows_OBJECTS)
phyml_windows_DEPENDENCIES =
am__phyrex_SOURCES_DIST = main.c utilities.c utilities.h optimiz.c \
	optimiz.h lk.c lk.h bionj.c bionj.h models.c models.h free.c \
	free.h help.c help.h simu.c simu.h eigen.c eigen.h pars.c \
	pars.h alrt.c alrt.h interface.c interface.h cl.c cl.h spr.c \
	spr.h draw.c draw.h stats.c stats.h rates.c rates.h mcmc.c \
	mcmc.h times.c times.h tiporder.c tiporder.h mg.c mg.h io.c \
	io.h make.c make.h nexus.c nexus.h init.c init.h xml.c xml.h \
	mixt.c mixt.h date.c date.h tbe.c tbe.h sse.c sse.h avx.c \
	avx.h ancestral.c ancestral.h phyrex.c phyrex.h
#am_phyrex_OBJECTS = main.$(OBJEXT) \
#	utilities.$(OBJEXT) \
#	optimiz.$(OBJEXT) \
#	lk.$(OBJEXT) \
#	bionj.$(OBJEXT) \
#	models.$(OBJEXT) \
#	free.$(OBJEXT) \
#	help.$(OBJEXT) \
#	simu.$(OBJEXT) \
#	eigen.$(OBJEXT) \
#	pars.$(OBJEXT) \
#	alrt.$(OBJEXT) \
#	interface.$(OBJEXT) \
#	cl.$(OBJEXT) \
#	spr.$(OBJEXT) \
#	draw.$(OBJEXT) \
#	stats.$(OBJEXT) \
#	rates.$(OBJEXT) \
#	mcmc.$(OBJEXT) \
#	times.$(OBJEXT) \
#	tiporder.$(OBJEXT) \
#	mg.$(OBJEXT) \
#	io.$(OBJEXT) \
#	make.$(OBJEXT) \
#	nexus.$(OBJEXT) \
#	init.$(OBJEXT) \
#	xml.$(OBJEXT) \
#	mixt.$(OBJEXT) \
#	date.$(OBJEXT) \
#	tbe.$(OBJEXT) \
#	sse.$(OBJEXT) \
#	avx.$(OBJEXT) \
#	ancestral.$(OBJEXT) \
#	phyrex.$(OBJEXT)
phyrex_OBJECTS = $(am_phyrex_OBJECTS)
phyrex_DEPENDENCIES =
am__phyrexsim_SOURCES_DIST = main.c utilities.c utilities.h optimiz.c \
	optimiz.h lk.c lk.h bionj.c bionj.h models.c models.h free.c \
	free.h help.c help.h simu.c simu.h eigen.c eigen.h pars.c \
	pars.h alrt.c alrt.h interface.c interface.h cl.c cl.h spr.c \
	spr.h draw.c draw.h stats.c stats.h rates.c rates.h mcmc.c \
	mcmc.h times.c times.h tiporder.c tiporder.h mg.c mg.h io.c \
	io.h make.c make.h nexus.c nexus.h init.c init.h xml.c xml.h \
	mixt.c mixt.h date.c date.h tbe.c tbe.h sse.c sse.h avx.c \
	avx.h ancestral.c ancestral.h phyrex.c phyrex.h
#am_phyrexsim_OBJECTS = main.$(OBJEXT) \
#	utilities.$(OBJEXT) \
#	optimiz.$(OBJEXT) \
#	lk.$(OBJEXT) \
#	bionj.$(OBJEXT) \
#	models.$(OBJEXT) \
#	free.$(OBJEXT) \
#	help.$(OBJEXT) \
#	simu.$(OBJEXT) \
#	eigen.$(OBJEXT) \
#	pars.$(OBJEXT) \
#	alrt.$(OBJEXT) \
#	interface.$(OBJEXT) \
#	cl.$(OBJEXT) \
#	spr.$(OBJEXT) \
#	draw.$(OBJEXT) \
#	stats.$(OBJEXT) \
#	rates.$(OBJEXT) \
#	mcmc.$(OBJEXT) \
#	times.$(OBJEXT) \
#	tiporder.$(OBJEXT) \
#	mg.$(OBJEXT) \
#	io.$(OBJEXT) \
#	make.$(OBJEXT) \
#	nexus.$(OBJEXT) \
#	init.$(OBJEXT) \
#	xml.$(OBJEXT) \
#	mixt.$(OBJEXT) \
#	date.$(OBJEXT) \
#	tbe.$(OBJEXT) \
#	sse.$(OBJEXT) \
#	avx.$(OBJEXT) \
#	ancestral.$(OBJEXT) \
#	phyrex.$(OBJEXT)
phyrexsim_OBJECTS = $(am_phyrexsim_OBJECTS)
phyrexsim_DEPENDENCIES =
am__phytime_SOURCES_DIST = main.c utilities.c utilities.h optimiz.c \
	optimiz.h lk.c lk.h bionj.c bionj.h models.c models.h free.c \
	free.h help.c help.h simu.c simu.h eigen.c eigen.h pars.c \
	pars.h alrt.c alrt.h interface.c interface.h cl.c cl.h spr.c \
	spr.h times.c times.h draw.c draw.h rates.c rates.h mcmc.c \
	mcmc.h stats.c stats.h mg.c mg.h tiporder.c tiporder.h io.c \
	io.h make.c make.h mixt.c mixt.h init.c init.h nexus.c nexus.h \
	date.c date.h tbe.c tbe.h sse.c sse.h avx.c avx.h ancestral.c \
	ancestral.h xml.c xml.h
#am_phytime_OBJECTS = main.$(OBJEXT) \
#	utilities.$(OBJEXT) optimiz.$(OBJEXT) \
#	lk.$(OBJEXT) bionj.$(OBJEXT) \
#	models.$(OBJEXT) free.$(OBJEXT) \
#	help.$(OBJEXT) simu.$(OBJEXT) \
#	eigen.$(OBJEXT) pars.$(OBJEXT) \
#	alrt.$(OBJEXT) interface.$(OBJEXT) \
#	cl.$(OBJEXT) spr.$(OBJEXT) times.$(OBJEXT) \
#	draw.$(OBJEXT) rates.$(OBJEXT) \
#	mcmc.$(OBJEXT) stats.$(OBJEXT) mg.$(OBJEXT) \
#	tiporder.$(OBJEXT) io.$(OBJEXT) \
#	make.$(OBJEXT) mixt.$(OBJEXT) \
#	init.$(OBJEXT) nexus.$(OBJEXT) \
#	date.$(OBJEXT) tbe.$(OBJEXT) sse.$(OBJEXT) \
#	avx.$(OBJEXT) ancestral.$(OBJEXT) \
#	xml.$(OBJEXT)
phytime_OBJECTS = $(am_phytime_OBJECTS)
phytime_DEPENDENCIES =
am__rf_SOURCES_DIST = main.c utilities.c utilities.h optimiz.c \
	optimiz.h lk.c lk.h bionj.c bionj.h models.c models.h free.c \
	free.h help.c help.h simu.c simu.h eigen.c eigen.h pars.c \
	pars.h alrt.c alrt.h interface.c interface.h cl.c cl.h spr.c \
	spr.h draw.c draw.h stats.c stats.h rates.c rates.h mcmc.c \
	mcmc.h times.c times.h tiporder.c tiporder.h mg.c mg.h io.c \
	io.h make.c make.h nexus.c nexus.h init.c init.h xml.c xml.h \
	mixt.c mixt.h tbe.c tbe.h date.c date.h ancestral.c \
	ancestral.h sse.c sse.h avx.c avx.h
#am_rf_OBJECTS = main.$(OBJEXT) \
#	utilities.$(OBJEXT) \
#	optimiz.$(OBJEXT) \
#	lk.$(OBJEXT) \
#	bionj.$(OBJEXT) \
#	models.$(OBJEXT) \
#	free.$(OBJEXT) \
#	help.$(OBJEXT) \
#	simu.$(OBJEXT) \
#	eigen.$(OBJEXT) \
#	pars.$(OBJEXT) \
#	alrt.$(OBJEXT) \
#	interface.$(OBJEXT) \
#	cl.$(OBJEXT) \
#	spr.$(OBJEXT) \
#	draw.$(OBJEXT) \
#	stats.$(OBJEXT) \
#	rates.$(OBJEXT) \
#	mcmc.$(OBJEXT) \
#	times.$(OBJEXT) \
#	tiporder.$(OBJEXT) \
#	mg.$(OBJEXT) \
#	io.$(OBJEXT) \
#	make.$(OBJEXT) \
#	nexus.$(OBJEXT) \
#	init.$(OBJEXT) \
#	xml.$(OBJEXT) \
#	mixt.$(OBJEXT) \
#	tbe.$(OBJEXT) \
#	date.$(OBJEXT) \
#	ancestral.$(OBJEXT) \
#	sse.$(OBJEXT) \
#	avx.$(OBJEXT)
rf_OBJECTS = $(am_rf_OBJECTS)
rf_DEPENDENCIES =
am__test_SOURCES_DIST = main.c utilities.c utilities.h optimiz.c \
	optimiz.h lk.c lk.h bionj.c bionj.h models.c models.h free.c \
	free.h help.c help.h simu.c simu.h eigen.c eigen.h pars.c \
	pars.h alrt.c alrt.h interface.c interface.h cl.c cl.h spr.c \
	spr.h draw.c draw.h tbe.c tbe.h stats.c stats.h rates.c \
	rates.h mcmc.c mcmc.h times.c times.h tiporder.c tiporder.h \
	mg.c mg.h io.c io.h make.c make.h nexus.c nexus.h init.c \
	init.h xml.c xml.h mixt.c mixt.h sse.c sse.h avx.c avx.h \
	ancestral.c ancestral.h date.c date.h
#am_test_OBJECTS = main.$(OBJEXT) \
#	utilities.$(OBJEXT) \
#	optimiz.$(OBJEXT) \
#	lk.$(OBJEXT) \
#	bionj.$(OBJEXT) \
#	models.$(OBJEXT) \
#	free.$(OBJEXT) \
#	help.$(OBJEXT) \
#	simu.$(OBJEXT) \
#	eigen.$(OBJEXT) \
#	pars.$(OBJEXT) \
#	alrt.$(OBJEXT) \
#	interface.$(OBJEXT) \
#	cl.$(OBJEXT) \
#	spr.$(OBJEXT) \
#	draw.$(OBJEXT) \
#	tbe.$(OBJEXT) \
#	stats.$(OBJEXT) \
#	rates.$(OBJEXT) \
#	mcmc.$(OBJEXT) \
#	times.$(OBJEXT) \
#	tiporder.$(OBJEXT) \
#	mg.$(OBJEXT) \
#	io.$(OBJEXT) \
#	make.$(OBJEXT) \
#	nexus.$(OBJEXT) \
#	init.$(OBJEXT) \
#	xml.$(OBJEXT) \
#	mixt.$(OBJEXT) \
#	sse.$(OBJEXT) \
#	avx.$(OBJEXT) \
#	ancestral.$(OBJEXT) \
#	date.$(OBJEXT)
test_OBJECTS = $(am_test_OBJECTS)
test_DEPENDENCIES =
am__tiporder_SOURCES_DIST = main.c utilities.c utilities.h optimiz.c \
	optimiz.h lk.c lk.h bionj.c bionj.h models.c models.h free.c \
	free.h help.c help.h simu.c simu.h eigen.c eigen.h pars.c \
	pars.h alrt.c alrt.h interface.c interface.h cl.c cl.h tbe.c \
	tbe.h mg.c mg.h times.c times.h mcmc.c mcmc.h rates.c rates.h \
	spr.c spr.h draw.c draw.h stats.c stats.h tiporder.c \
	tiporder.h
#am_tiporder_OBJECTS = main.$(OBJEXT) \
#	utilities.$(OBJEXT) \
#	optimiz.$(OBJEXT) \
#	lk.$(OBJEXT) \
#	bionj.$(OBJEXT) \
#	models.$(OBJEXT) \
#	free.$(OBJEXT) \
#	help.$(OBJEXT) \
#	simu.$(OBJEXT) \
#	eigen.$(OBJEXT) \
#	pars.$(OBJEXT) \
#	alrt.$(OBJEXT) \
#	interface.$(OBJEXT) \
#	cl.$(OBJEXT) \
#	tbe.$(OBJEXT) \
#	mg.$(OBJEXT) \
#	times.$(OBJEXT) \
#	mcmc.$(OBJEXT) \
#	rates.$(OBJEXT) \
#	spr.$(OBJEXT) \
#	draw.$(OBJEXT) \
#	stats.$(OBJEXT) \
#	tiporder.$(OBJEXT)
tiporder_OBJECTS = $(am_tiporder_OBJECTS)
tiporder_DEPENDENCIES =
AM_V_P = $(am__v_P_$(V))
am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I. -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_$(V))
am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_$(V))
am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
SOURCES = $(checkpoint_SOURCES) $(date_SOURCES) $(evolve_SOURCES) \
	$(invitee_SOURCES) $(part_SOURCES) $(phycont_SOURCES) \
	$(phylogeo_SOURCES) $(phyml_SOURCES) $(phyml_beagle_SOURCES) \
	$(phyml_mpi_SOURCES) $(phyml_windows_SOURCES) \
	$(phyrex_SOURCES) $(phyrexsim_SOURCES) $(phytime_SOURCES) \
	$(rf_SOURCES) $(test_SOURCES) $(tiporder_SOURCES)
DIST_SOURCES = $(am__checkpoint_SOURCES_DIST) $(am__date_SOURCES_DIST) \
	$(am__evolve_SOURCES_DIST) $(am__invitee_SOURCES_DIST) \
	$(am__part_SOURCES_DIST) $(am__phycont_SOURCES_DIST) \
	$(am__phylogeo_SOURCES_DIST) $(am__phyml_SOURCES_DIST) \
	$(am__phyml_beagle_SOURCES_DIST) $(am__phyml_mpi_SOURCES_DIST) \
	$(am__phyml_windows_SOURCES_DIST) $(am__phyrex_SOURCES_DIST) \
	$(am__phyrexsim_SOURCES_DIST) $(am__phytime_SOURCES_DIST) \
	$(am__rf_SOURCES_DIST) $(am__test_SOURCES_DIST) \
	$(am__tiporder_SOURCES_DIST)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
am__DIST_COMMON = $(srcdir)/Makefile.in $(top_srcdir)/depcomp
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /home/work/projects/phyml/missing aclocal-1.15
AMTAR = $${TAR-tar}
AM_DEFAULT_VERBOSITY = 1
AUTOCONF = ${SHELL} /home/work/projects/phyml/missing autoconf
AUTOHEADER = ${SHELL} /home/work/projects/phyml/missing autoheader
AUTOMAKE = ${SHELL} /home/work/projects/phyml/missing automake-1.15
AWK = gawk
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -std=c99 -O0 -g -fomit-frame-pointer -funroll-loops -Wall -Winline -finline -march=native
CPP = gcc -E
CPPFLAGS = 
CYGPATH_W = echo
DEFS = $(REVISION)
DEPDIR = .deps
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = 
GREP = /bin/grep
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LATEX = latex
LDFLAGS = 
LIBOBJS = 
LIBS = -lm 
LTLIBOBJS = 
MAKEINFO = ${SHELL} /home/work/projects/phyml/missing makeinfo
MKDIR_P = /bin/mkdir -p
OBJEXT = o
PACKAGE = phyml
PACKAGE_BUGREPORT = guindon@lirmm.fr
PACKAGE_NAME = PhyML
PACKAGE_STRING = PhyML 3.3.20190909
PACKAGE_TARNAME = phyml
PACKAGE_URL = 
PACKAGE_VERSION = 3.3.20190909
PATH_SEPARATOR = :
PDFLATEX = pdflatex
SET_MAKE = 
SHELL = /bin/bash
STRIP = 
VERSION = 3.3.20190909
abs_builddir = /home/work/projects/phyml/src
abs_srcdir = /home/work/projects/phyml/src
abs_top_builddir = /home/work/projects/phyml
abs_top_srcdir = /home/work/projects/phyml
ac_ct_CC = gcc
am__include = include
am__leading_dot = .
am__quote = 
am__tar = $${TAR-tar} chof - "$$tardir"
am__untar = $${TAR-tar} xf -
bindir = ${exec_prefix}/bin
build = x86_64-pc-linux-gnu
build_alias = 
build_cpu = x86_64
build_os = linux-gnu
build_vendor = pc
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = x86_64-pc-linux-gnu
host_alias = 
host_cpu = x86_64
host_os = linux-gnu
host_vendor = pc
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /home/work/projects/phyml/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = $(MKDIR_P)
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
runstatedir = ${localstatedir}/run
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = ../
top_builddir = ..
top_srcdir = ..
#PROG = PHYML
##PROG = DATE
##PROG = PHYREXSIM
##PROG = PHYREX
##PROG = PHYML
##PROG = CHECKPOINT
##PROG = EVOLVE
##PROG = GEO
##PROG = INVITEE
##PROG = TEST
##PROG = PHYML
##PROG = PHYML
##PROG = RF
##PROG = TIPORDER
##PROG = RWRAP
##PROG = PART
##PROG = PHYCONT
##PROG = PHYTIME
PROG = PHYML
#phytime_SOURCES = main.c \
#utilities.c utilities.h\
#optimiz.c optimiz.h\
#lk.c lk.h\
#bionj.c bionj.h\
#models.c models.h\
#free.c free.h\
#help.c help.h\
#simu.c simu.h\
#eigen.c eigen.h\
#pars.c pars.h\
#alrt.c alrt.h\
#interface.c interface.h\
#cl.c cl.h\
#spr.c spr.h\
#times.c times.h\
#draw.c draw.h\
#rates.c rates.h\
#mcmc.c mcmc.h\
#stats.c stats.h\
#mg.c mg.h\
#tiporder.c tiporder.h\
#io.c io.h\
#make.c make.h\
#mixt.c mixt.h\
#init.c init.h\
#nexus.c nexus.h\
#date.c date.h\
#tbe.c tbe.h\
#sse.c sse.h\
#avx.c avx.h\
#ancestral.c ancestral.h\
#xml.c xml.h

#phytime_LDADD = -lm
#phycont_SOURCES = main.c \
#utilities.c utilities.h\
#optimiz.c optimiz.h\
#lk.c lk.h\
#bionj.c bionj.h\
#models.c models.h\
#free.c free.h\
#help.c help.h\
#simu.c simu.h\
#eigen.c eigen.h\
#pars.c pars.h\
#alrt.c alrt.h\
#interface.c interface.h\
#cl.c cl.h\
#spr.c spr.h\
#times.c times.h\
#draw.c draw.h\
#rates.c rates.h\
#mcmc.c mcmc.h\
#tbe.c tbe.h \
#stats.c stats.h\
#mg.c mg.h\
#tiporder.c tiporder.h

# continuous.c continuous.h
#phycont_LDADD = -lm
# if WANT_RWRAP
# lib_LTLIBRARIES = librwrap.la
# librwrap_la_SOURCES = main.c \
# utilities.c  utilities.h\
# optimiz.c  optimiz.h\
# lk.c  lk.h\
# bionj.c bionj.h\
# models.c  models.h\
# free.c  free.h\
# help.c  help.h\
# simu.c  simu.h\
# eigen.c  eigen.h\
# pars.c  pars.h\
# alrt.c  alrt.h\
# interface.c  interface.h\
# cl.c  cl.h\
# spr.c spr.h\
# draw.c  draw.h\
# stats.c stats.h\
# rates.c rates.h\
# mcmc.c mcmc.h\
# times.c times.h\
# tiporder.c tiporder.h\
# mg.c mg.h\
# io.c io.h\
# make.c make.h\
# nexus.c nexus.h\
# init.c init.h\
# xml.c xml.h\
# mixt.c mixt.h\
# rwrapper.c rwrapper.h
# librwrap_la_LIBADD = -lm
# librwrap_la_LDFLAGS = -I/usr/share/R/include -shared -module -flat_namespace
# librwrap_la_CFLAGS=-std=gnu99 -fPIC -Wl,-z,defs
# else 
#part_SOURCES = main.c \
#utilities.c utilities.h\
#optimiz.c optimiz.h\
#lk.c lk.h\
#bionj.c bionj.h\
#models.c models.h\
#free.c free.h\
#help.c help.h\
#simu.c simu.h\
#eigen.c eigen.h\
#pars.c pars.h\
#alrt.c alrt.h\
#interface.c interface.h\
#cl.c cl.h\
#mg.c mg.h\
#spr.c spr.h\
#tbe.c tbe.h \
#draw.c draw.h\
#stats.c stats.h\
#tiporder.c tiporder.h

#part_LDADD = -lm
#tiporder_SOURCES = main.c \
#utilities.c utilities.h\
#optimiz.c optimiz.h\
#lk.c lk.h\
#bionj.c bionj.h\
#models.c models.h\
#free.c free.h\
#help.c help.h\
#simu.c simu.h\
#eigen.c eigen.h\
#pars.c pars.h\
#alrt.c alrt.h\
#interface.c interface.h\
#cl.c cl.h\
#tbe.c tbe.h \
#mg.c mg.h\
#times.c times.h\
#mcmc.c mcmc.h\
#rates.c rates.h\
#spr.c spr.h\
#draw.c draw.h\
#stats.c stats.h\
#tiporder.c tiporder.h

#tiporder_LDADD = -lm
#rf_SOURCES = main.c \
#utilities.c  utilities.h\
#optimiz.c  optimiz.h\
#lk.c  lk.h\
#bionj.c bionj.h\
#models.c  models.h\
#free.c  free.h\
#help.c  help.h\
#simu.c  simu.h\
#eigen.c  eigen.h\
#pars.c  pars.h\
#alrt.c  alrt.h\
#interface.c  interface.h\
#cl.c  cl.h\
#spr.c spr.h\
#draw.c  draw.h\
#stats.c stats.h\
#rates.c rates.h\
#mcmc.c mcmc.h\
#times.c times.h\
#tiporder.c tiporder.h\
#mg.c mg.h\
#io.c io.h\
#make.c make.h\
#nexus.c nexus.h\
#init.c init.h\
#xml.c xml.h\
#mixt.c mixt.h\
#tbe.c tbe.h \
#date.c date.h\
#ancestral.c ancestral.h\
#sse.c sse.h\
#avx.c avx.h

#rf_LDADD = -lm
#phyml_mpi_SOURCES = main.c \
#utilities.c  utilities.h\
#optimiz.c  optimiz.h\
#lk.c  lk.h\
#bionj.c bionj.h\
#models.c  models.h\
#free.c  free.h\
#help.c  help.h\
#simu.c  simu.h\
#eigen.c  eigen.h\
#pars.c  pars.h\
#alrt.c  alrt.h\
#interface.c  interface.h\
#cl.c  cl.h\
#spr.c spr.h\
#draw.c  draw.h\
#stats.c stats.h\
#rates.c rates.h\
#mcmc.c mcmc.h\
#times.c times.h\
#tiporder.c tiporder.h\
#mg.c mg.h\
#io.c io.h\
#make.c make.h\
#nexus.c nexus.h\
#init.c init.h\
#xml.c xml.h\
#mixt.c mixt.h\
#tbe.c tbe.h \
#date.c date.h\
#sse.c sse.h\
#avx.c avx.h\
#ancestral.c ancestral.h\
#mpi_boot.c mpi_boot.h

#phyml_mpi_LDADD = -lm
#phyml_windows_SOURCES = main.c \
#utilities.c  utilities.h\
#optimiz.c  optimiz.h\
#lk.c  lk.h\
#bionj.c bionj.h\
#models.c  models.h\
#free.c  free.h\
#help.c  help.h\
#simu.c  simu.h\
#eigen.c  eigen.h\
#pars.c  pars.h\
#alrt.c  alrt.h\
#interface.c  interface.h\
#cl.c  cl.h\
#spr.c spr.h\
#draw.c  draw.h\
#tbe.c tbe.h \
#stats.c stats.h\
#rates.c rates.h\
#mcmc.c mcmc.h\
#times.c times.h\
#tiporder.c tiporder.h\
#mg.c mg.h\
#io.c io.h\
#make.c make.h\
#nexus.c nexus.h\
#init.c init.h\
#xml.c xml.h\
#mixt.c mixt.h\
#sse.c sse.h\
#avx.c avx.h\
#ancestral.c ancestral.h\
#date.c date.h

#phyml_windows_LDADD = -lm
#test_SOURCES = main.c \
#utilities.c  utilities.h\
#optimiz.c  optimiz.h\
#lk.c  lk.h\
#bionj.c bionj.h\
#models.c  models.h\
#free.c  free.h\
#help.c  help.h\
#simu.c  simu.h\
#eigen.c  eigen.h\
#pars.c  pars.h\
#alrt.c  alrt.h\
#interface.c  interface.h\
#cl.c  cl.h\
#spr.c spr.h\
#draw.c  draw.h\
#tbe.c tbe.h \
#stats.c stats.h\
#rates.c rates.h\
#mcmc.c mcmc.h\
#times.c times.h\
#tiporder.c tiporder.h\
#mg.c mg.h\
#io.c io.h\
#make.c make.h\
#nexus.c nexus.h\
#init.c init.h\
#xml.c xml.h\
#mixt.c mixt.h\
#sse.c sse.h\
#avx.c avx.h\
#ancestral.c ancestral.h\
#date.c date.h

#test_LDADD = -lm
#invitee_SOURCES = main.c \
#utilities.c  utilities.h\
#optimiz.c  optimiz.h\
#lk.c  lk.h\
#bionj.c bionj.h\
#models.c  models.h\
#free.c  free.h\
#help.c  help.h\
#simu.c  simu.h\
#eigen.c  eigen.h\
#pars.c  pars.h\
#alrt.c  alrt.h\
#interface.c  interface.h\
#cl.c  cl.h\
#spr.c spr.h\
#draw.c  draw.h\
#stats.c stats.h\
#rates.c rates.h\
#mcmc.c mcmc.h\
#times.c times.h\
#tiporder.c tiporder.h\
#mg.c mg.h\
#io.c io.h\
#make.c make.h\
#nexus.c nexus.h\
#tbe.c tbe.h \
#init.c init.h\
#xml.c xml.h\
#invitee.c invitee.h\
#mixt.c mixt.h

#invitee_LDADD = -lm 
#evolve_SOURCES = main.c\
#utilities.c  utilities.h\
#optimiz.c  optimiz.h\
#lk.c  lk.h\
#bionj.c bionj.h\
#models.c  models.h\
#free.c  free.h\
#help.c  help.h\
#simu.c  simu.h\
#eigen.c  eigen.h\
#pars.c  pars.h\
#alrt.c  alrt.h\
#interface.c  interface.h\
#cl.c  cl.h\
#spr.c spr.h\
#draw.c  draw.h\
#tbe.c tbe.h \
#stats.c stats.h\
#rates.c rates.h\
#mcmc.c mcmc.h\
#times.c times.h\
#tiporder.c tiporder.h\
#mg.c mg.h\
#io.c io.h\
#make.c make.h\
#nexus.c nexus.h\
#init.c init.h\
#xml.c xml.h\
#mixt.c mixt.h

#evolve_LDADD = -lm 
#phylogeo_SOURCES = main.c\
#utilities.c  utilities.h\
#optimiz.c  optimiz.h\
#lk.c  lk.h\
#bionj.c bionj.h\
#models.c  models.h\
#free.c  free.h\
#help.c  help.h\
#simu.c  simu.h\
#eigen.c  eigen.h\
#pars.c  pars.h\
#alrt.c  alrt.h\
#interface.c  interface.h\
#cl.c  cl.h\
#spr.c spr.h\
#draw.c  draw.h\
#stats.c stats.h\
#rates.c rates.h\
#mcmc.c mcmc.h\
#times.c times.h\
#tiporder.c tiporder.h\
#mg.c mg.h\
#io.c io.h\
#make.c make.h\
#tbe.c tbe.h \
#nexus.c nexus.h\
#init.c init.h\
#xml.c xml.h\
#mixt.c mixt.h\
#geo.c geo.h

#phylogeo_LDADD = -lm 
#checkpoint_SOURCES = main.c\
#utilities.c  utilities.h\
#optimiz.c  optimiz.h\
#lk.c  lk.h\
#bionj.c bionj.h\
#models.c  models.h\
#free.c  free.h\
#help.c  help.h\
#simu.c  simu.h\
#eigen.c  eigen.h\
#pars.c  pars.h\
#alrt.c  alrt.h\
#interface.c  interface.h\
#cl.c  cl.h\
#spr.c spr.h\
#draw.c  draw.h\
#stats.c stats.h\
#rates.c rates.h\
#mcmc.c mcmc.h\
#times.c times.h\
#tiporder.c tiporder.h\
#mg.c mg.h\
#io.c io.h\
#make.c make.h\
#tbe.c tbe.h \
#nexus.c nexus.h\
#init.c init.h\
#xml.c xml.h\
#mixt.c mixt.h\
#checkpoint.c checkpoint.h

#checkpoint_LDADD = -lm
#phyrex_SOURCES = main.c\
#utilities.c  utilities.h\
#optimiz.c  optimiz.h\
#lk.c  lk.h\
#bionj.c bionj.h\
#models.c  models.h\
#free.c  free.h\
#help.c  help.h\
#simu.c  simu.h\
#eigen.c  eigen.h\
#pars.c  pars.h\
#alrt.c  alrt.h\
#interface.c  interface.h\
#cl.c  cl.h\
#spr.c spr.h\
#draw.c  draw.h\
#stats.c stats.h\
#rates.c rates.h\
#mcmc.c mcmc.h\
#times.c times.h\
#tiporder.c tiporder.h\
#mg.c mg.h\
#io.c io.h\
#make.c make.h\
#nexus.c nexus.h\
#init.c init.h\
#xml.c xml.h\
#mixt.c mixt.h\
#date.c date.h\
#tbe.c tbe.h \
#sse.c sse.h\
#avx.c avx.h\
#ancestral.c ancestral.h\
#phyrex.c phyrex.h

#phyrex_LDADD = -lm 
#phyrexsim_SOURCES = main.c\
#utilities.c  utilities.h\
#optimiz.c  optimiz.h\
#lk.c  lk.h\
#bionj.c bionj.h\
#models.c  models.h\
#free.c  free.h\
#help.c  help.h\
#simu.c  simu.h\
#eigen.c  eigen.h\
#pars.c  pars.h\
#alrt.c  alrt.h\
#interface.c  interface.h\
#cl.c  cl.h\
#spr.c spr.h\
#draw.c  draw.h\
#stats.c stats.h\
#rates.c rates.h\
#mcmc.c mcmc.h\
#times.c times.h\
#tiporder.c tiporder.h\
#mg.c mg.h\
#io.c io.h\
#make.c make.h\
#nexus.c nexus.h\
#init.c init.h\
#xml.c xml.h\
#mixt.c mixt.h\
#date.c date.h\
#tbe.c tbe.h \
#sse.c sse.h\
#avx.c avx.h\
#ancestral.c ancestral.h\
#phyrex.c phyrex.h

#phyrexsim_LDADD = -lm
#phyml_beagle_SOURCES = main.c \
#utilities.c  utilities.h\
#optimiz.c  optimiz.h\
#lk.c  lk.h\
#bionj.c bionj.h\
#models.c  models.h\
#free.c  free.h\
#help.c  help.h\
#simu.c  simu.h\
#eigen.c  eigen.h\
#pars.c  pars.h\
#alrt.c  alrt.h\
#interface.c  interface.h\
#cl.c  cl.h\
#spr.c spr.h\
#draw.c  draw.h\
#stats.c stats.h\
#rates.c rates.h\
#mcmc.c mcmc.h\
#times.c times.h\
#tiporder.c tiporder.h\
#mg.c mg.h\
#tbe.c tbe.h \
#io.c io.h\
#make.c make.h\
#nexus.c nexus.h\
#init.c init.h\
#xml.c xml.h\
#mixt.c mixt.h\
#beagle_utils.c beagle_utils.h

#phyml_beagle_LDADD = -lm -lhmsbeagle
#date_SOURCES = main.c \
#utilities.c  utilities.h\
#optimiz.c  optimiz.h\
#lk.c  lk.h\
#bionj.c bionj.h\
#models.c  models.h\
#free.c  free.h\
#help.c  help.h\
#simu.c  simu.h\
#eigen.c  eigen.h\
#pars.c  pars.h\
#alrt.c  alrt.h\
#interface.c  interface.h\
#cl.c  cl.h\
#spr.c spr.h\
#draw.c  draw.h\
#stats.c stats.h\
#rates.c rates.h\
#mcmc.c mcmc.h\
#times.c times.h\
#tiporder.c tiporder.h\
#mg.c mg.h\
#io.c io.h\
#make.c make.h\
#nexus.c nexus.h\
#init.c init.h\
#xml.c xml.h\
#tbe.c tbe.h \
#mixt.c mixt.h\
#date.c date.h

#date_LDADD = -lm
phyml_SOURCES = main.c \
utilities.c  utilities.h\
optimiz.c  optimiz.h\
lk.c  lk.h\
bionj.c bionj.h\
models.c  models.h\
free.c  free.h\
help.c  help.h\
simu.c  simu.h\
eigen.c  eigen.h\
pars.c  pars.h\
alrt.c  alrt.h\
interface.c  interface.h\
cl.c  cl.h\
spr.c spr.h\
draw.c  draw.h\
stats.c stats.h\
rates.c rates.h\
mcmc.c mcmc.h\
times.c times.h\
tiporder.c tiporder.h\
io.c io.h\
make.c make.h\
nexus.c nexus.h\
init.c init.h\
xml.c xml.h\
date.c date.h\
sse.c sse.h\
avx.c avx.h\
tbe.c tbe.h \
ancestral.c ancestral.h \
mixt.c mixt.h

phyml_LDADD = -lm
all: all-am

.SUFFIXES:
.SUFFIXES: .c .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign src/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign src/Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(bindir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(bindir)" || exit 1; \
	fi; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p \
	  ; then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' \
	    -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	      echo " $(INSTALL_PROGRAM_ENV) $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	      $(INSTALL_PROGRAM_ENV) $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' \
	`; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

clean-binPROGRAMS:
	-test -z "$(bin_PROGRAMS)" || rm -f $(bin_PROGRAMS)

checkpoint$(EXEEXT): $(checkpoint_OBJECTS) $(checkpoint_DEPENDENCIES) $(EXTRA_checkpoint_DEPENDENCIES) 
	@rm -f checkpoint$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(checkpoint_OBJECTS) $(checkpoint_LDADD) $(LIBS)

date$(EXEEXT): $(date_OBJECTS) $(date_DEPENDENCIES) $(EXTRA_date_DEPENDENCIES) 
	@rm -f date$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(date_OBJECTS) $(date_LDADD) $(LIBS)

evolve$(EXEEXT): $(evolve_OBJECTS) $(evolve_DEPENDENCIES) $(EXTRA_evolve_DEPENDENCIES) 
	@rm -f evolve$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(evolve_OBJECTS) $(evolve_LDADD) $(LIBS)

invitee$(EXEEXT): $(invitee_OBJECTS) $(invitee_DEPENDENCIES) $(EXTRA_invitee_DEPENDENCIES) 
	@rm -f invitee$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(invitee_OBJECTS) $(invitee_LDADD) $(LIBS)

part$(EXEEXT): $(part_OBJECTS) $(part_DEPENDENCIES) $(EXTRA_part_DEPENDENCIES) 
	@rm -f part$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(part_OBJECTS) $(part_LDADD) $(LIBS)

phycont$(EXEEXT): $(phycont_OBJECTS) $(phycont_DEPENDENCIES) $(EXTRA_phycont_DEPENDENCIES) 
	@rm -f phycont$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(phycont_OBJECTS) $(phycont_LDADD) $(LIBS)

phylogeo$(EXEEXT): $(phylogeo_OBJECTS) $(phylogeo_DEPENDENCIES) $(EXTRA_phylogeo_DEPENDENCIES) 
	@rm -f phylogeo$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(phylogeo_OBJECTS) $(phylogeo_LDADD) $(LIBS)

phyml$(EXEEXT): $(phyml_OBJECTS) $(phyml_DEPENDENCIES) $(EXTRA_phyml_DEPENDENCIES) 
	@rm -f phyml$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(phyml_OBJECTS) $(phyml_LDADD) $(LIBS)

phyml-beagle$(EXEEXT): $(phyml_beagle_OBJECTS) $(phyml_beagle_DEPENDENCIES) $(EXTRA_phyml_beagle_DEPENDENCIES) 
	@rm -f phyml-beagle$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(phyml_beagle_OBJECTS) $(phyml_beagle_LDADD) $(LIBS)

phyml-mpi$(EXEEXT): $(phyml_mpi_OBJECTS) $(phyml_mpi_DEPENDENCIES) $(EXTRA_phyml_mpi_DEPENDENCIES) 
	@rm -f phyml-mpi$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(phyml_mpi_OBJECTS) $(phyml_mpi_LDADD) $(LIBS)

phyml-windows$(EXEEXT): $(phyml_windows_OBJECTS) $(phyml_windows_DEPENDENCIES) $(EXTRA_phyml_windows_DEPENDENCIES) 
	@rm -f phyml-windows$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(phyml_windows_OBJECTS) $(phyml_windows_LDADD) $(LIBS)

phyrex$(EXEEXT): $(phyrex_OBJECTS) $(phyrex_DEPENDENCIES) $(EXTRA_phyrex_DEPENDENCIES) 
	@rm -f phyrex$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(phyrex_OBJECTS) $(phyrex_LDADD) $(LIBS)

phyrexsim$(EXEEXT): $(phyrexsim_OBJECTS) $(phyrexsim_DEPENDENCIES) $(EXTRA_phyrexsim_DEPENDENCIES) 
	@rm -f phyrexsim$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(phyrexsim_OBJECTS) $(phyrexsim_LDADD) $(LIBS)

phytime$(EXEEXT): $(phytime_OBJECTS) $(phytime_DEPENDENCIES) $(EXTRA_phytime_DEPENDENCIES) 
	@rm -f phytime$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(phytime_OBJECTS) $(phytime_LDADD) $(LIBS)

rf$(EXEEXT): $(rf_OBJECTS) $(rf_DEPENDENCIES) $(EXTRA_rf_DEPENDENCIES) 
	@rm -f rf$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(rf_OBJECTS) $(rf_LDADD) $(LIBS)

test$(EXEEXT): $(test_OBJECTS) $(test_DEPENDENCIES) $(EXTRA_test_DEPENDENCIES) 
	@rm -f test$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test_OBJECTS) $(test_LDADD) $(LIBS)

tiporder$(EXEEXT): $(tiporder_OBJECTS) $(tiporder_DEPENDENCIES) $(EXTRA_tiporder_DEPENDENCIES) 
	@rm -f tiporder$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tiporder_OBJECTS) $(tiporder_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/alrt.Po
include ./$(DEPDIR)/ancestral.Po
include ./$(DEPDIR)/avx.Po
include ./$(DEPDIR)/beagle_utils.Po
include ./$(DEPDIR)/bionj.Po
include ./$(DEPDIR)/checkpoint.Po
include ./$(DEPDIR)/cl.Po
include ./$(DEPDIR)/date.Po
include ./$(DEPDIR)/draw.Po
include ./$(DEPDIR)/eigen.Po
include ./$(DEPDIR)/free.Po
include ./$(DEPDIR)/geo.Po
include ./$(DEPDIR)/help.Po
include ./$(DEPDIR)/init.Po
include ./$(DEPDIR)/interface.Po
include ./$(DEPDIR)/invitee.Po
include ./$(DEPDIR)/io.Po
include ./$(DEPDIR)/lk.Po
include ./$(DEPDIR)/main.Po
include ./$(DEPDIR)/make.Po
include ./$(DEPDIR)/mcmc.Po
include ./$(DEPDIR)/mg.Po
include ./$(DEPDIR)/mixt.Po
include ./$(DEPDIR)/models.Po
include ./$(DEPDIR)/mpi_boot.Po
include ./$(DEPDIR)/nexus.Po
include ./$(DEPDIR)/optimiz.Po
include ./$(DEPDIR)/pars.Po
include ./$(DEPDIR)/phyrex.Po
include ./$(DEPDIR)/rates.Po
include ./$(DEPDIR)/simu.Po
include ./$(DEPDIR)/spr.Po
include ./$(DEPDIR)/sse.Po
include ./$(DEPDIR)/stats.Po
include ./$(DEPDIR)/tbe.Po
include ./$(DEPDIR)/times.Po
include ./$(DEPDIR)/tiporder.Po
include ./$(DEPDIR)/utilities.Po
include ./$(DEPDIR)/xml.Po

.c.o:
	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(COMPILE) -c -o $@ $<

.c.obj:
	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-am
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-am

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-am

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(PROGRAMS)
installdirs:
	for dir in "$(DESTDIR)$(bindir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-binPROGRAMS

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS TAGS all all-am check check-am clean \
	clean-binPROGRAMS clean-generic cscopelist-am ctags ctags-am \
	distclean distclean-compile distclean-generic distclean-tags \
	distdir dvi dvi-am html html-am info info-am install \
	install-am install-binPROGRAMS install-data install-data-am \
	install-dvi install-dvi-am install-exec install-exec-am \
	install-html install-html-am install-info install-info-am \
	install-man install-pdf install-pdf-am install-ps \
	install-ps-am install-strip installcheck installcheck-am \
	installdirs maintainer-clean maintainer-clean-generic \
	mostlyclean mostlyclean-compile mostlyclean-generic pdf pdf-am \
	ps ps-am tags tags-am uninstall uninstall-am \
	uninstall-binPROGRAMS

.PRECIOUS: Makefile


all-am:	intro $(bin_PROGRAMS)
	@echo ""
	@echo "Done."

intro:	
	@echo ""
	@echo ""
	@echo ".:  Building [$(bin_PROGRAMS)]. Version $(VERSION) :."
	@echo ""
	@echo ""

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
